\contentsline {section}{\numberline {1}GDB部分(如何减少与修复bug)}{2}{section.1}%
\contentsline {subsection}{\numberline {1.1}减少错误的好习惯}{2}{subsection.1.1}%
\contentsline {subsubsection}{\numberline {1.1.1}写伪代码}{2}{subsubsection.1.1.1}%
\contentsline {subsubsection}{\numberline {1.1.2}避免常见的错误}{3}{subsubsection.1.1.2}%
\contentsline {subsection}{\numberline {1.2}GDB的基本使用}{4}{subsection.1.2}%
\contentsline {subsubsection}{\numberline {1.2.1}用gdb执行程序的技巧}{5}{subsubsection.1.2.1}%
\contentsline {subsubsection}{\numberline {1.2.2}用GDB查看信息的技巧}{5}{subsubsection.1.2.2}%
\contentsline {subsubsection}{\numberline {1.2.3}GDB断点的技巧}{5}{subsubsection.1.2.3}%
\contentsline {section}{\numberline {2}输入输出 \& STL（标准模板库）\& 奇怪的技巧}{6}{section.2}%
\contentsline {subsection}{\numberline {2.1}输入输出}{6}{subsection.2.1}%
\contentsline {subsubsection}{\numberline {2.1.1}cin}{6}{subsubsection.2.1.1}%
\contentsline {subsubsection}{\numberline {2.1.2}cout}{8}{subsubsection.2.1.2}%
\contentsline {subsubsection}{\numberline {2.1.3}getline}{9}{subsubsection.2.1.3}%
\contentsline {subsubsection}{\numberline {2.1.4}putchar/getchar}{9}{subsubsection.2.1.4}%
\contentsline {subsubsection}{\numberline {2.1.5}scaf(可以便捷的实现混合类型、复杂格式、指定特殊格式的输入)}{10}{subsubsection.2.1.5}%
\contentsline {subsubsection}{\numberline {2.1.6}printf（可以便捷的实现混合类型、复杂格式、指定特殊格式的输出）}{11}{subsubsection.2.1.6}%
\contentsline {subsubsection}{\numberline {2.1.7}gets/puts}{13}{subsubsection.2.1.7}%
\contentsline {subsubsection}{\numberline {2.1.8}freopen}{13}{subsubsection.2.1.8}%
\contentsline {subsubsection}{\numberline {2.1.9}文件指针FILE*}{13}{subsubsection.2.1.9}%
\contentsline {subsubsection}{\numberline {2.1.10}文件流fstream}{14}{subsubsection.2.1.10}%
\contentsline {subsection}{\numberline {2.2}STL，Standard Template Library，标准模板库}{14}{subsection.2.2}%
\contentsline {subsubsection}{\numberline {2.2.1}迭代器}{14}{subsubsection.2.2.1}%
\contentsline {subsubsection}{\numberline {2.2.2}sort}{15}{subsubsection.2.2.2}%
\contentsline {subsubsection}{\numberline {2.2.3}lower\textunderscore bound(begin,end,value,cmp())}{16}{subsubsection.2.2.3}%
\contentsline {subsubsection}{\numberline {2.2.4}栈，头文件<stack>}{17}{subsubsection.2.2.4}%
\contentsline {subsubsection}{\numberline {2.2.5}队列，头文件<queue>}{17}{subsubsection.2.2.5}%
\contentsline {subsubsection}{\numberline {2.2.6}链表，头文件<list>}{17}{subsubsection.2.2.6}%
\contentsline {subsubsection}{\numberline {2.2.7}集合<set>,可重集合<multiset>}{18}{subsubsection.2.2.7}%
\contentsline {subsubsection}{\numberline {2.2.8}映射<map>}{18}{subsubsection.2.2.8}%
\contentsline {subsubsection}{\numberline {2.2.9}优先队列/堆priority\textunderscore queue,头文件<queue>}{19}{subsubsection.2.2.9}%
\contentsline {subsubsection}{\numberline {2.2.10}vector动态数组(长度不限的数组,采用分块存储)}{19}{subsubsection.2.2.10}%
\contentsline {subsection}{\numberline {2.3}编程技巧}{20}{subsection.2.3}%
\contentsline {subsubsection}{\numberline {2.3.1}位运算}{20}{subsubsection.2.3.1}%
\contentsline {subsubsection}{\numberline {2.3.2}宏定义}{21}{subsubsection.2.3.2}%
\contentsline {subsubsection}{\numberline {2.3.3}骗分技巧（重要！！！慎用！！！）}{22}{subsubsection.2.3.3}%
\contentsline {section}{\numberline {3}面向对象的程序设计}{22}{section.3}%
\contentsline {subsection}{\numberline {3.1}类继承}{22}{subsection.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}类继承基本语法（公有继承）}{23}{subsubsection.3.1.1}%
\contentsline {subsubsection}{\numberline {3.1.2}多次继承}{25}{subsubsection.3.1.2}%
\contentsline {subsubsection}{\numberline {3.1.3}多态继承}{25}{subsubsection.3.1.3}%
\contentsline {paragraph}{静态类型和动态类型}{25}{paragraph*.1}%
\contentsline {paragraph}{引入多态继承的目的}{25}{paragraph*.2}%
\contentsline {paragraph}{引入多态}{27}{paragraph*.3}%
\contentsline {subsubsection}{\numberline {3.1.4}细节}{28}{subsubsection.3.1.4}%
\contentsline {paragraph}{派生类中的虚函数}{28}{paragraph*.4}%
\contentsline {paragraph}{析构函数}{29}{paragraph*.5}%
\contentsline {paragraph}{最终覆盖函数}{29}{paragraph*.6}%
\contentsline {paragraph}{返回类型要求}{29}{paragraph*.7}%
\contentsline {paragraph}{有限定名字查找 vs 无限定名字查找}{30}{paragraph*.8}%
\contentsline {paragraph}{不满足函数覆盖的情形}{30}{paragraph*.9}%
\contentsline {paragraph}{构造函数}{31}{paragraph*.10}%
\contentsline {paragraph}{友元}{31}{paragraph*.11}%
\contentsline {subsubsection}{\numberline {3.1.5}静态联编和动态联编}{31}{subsubsection.3.1.5}%
\contentsline {paragraph}{指针和引用的向上转换和向下转换}{31}{paragraph*.12}%
\contentsline {paragraph}{静态联编 动态联编}{32}{paragraph*.13}%
\contentsline {paragraph}{虚函数表}{32}{paragraph*.14}%
\contentsline {subsubsection}{\numberline {3.1.6}访问控制}{33}{subsubsection.3.1.6}%
\contentsline {paragraph}{类的protected成员}{33}{paragraph*.15}%
\contentsline {paragraph}{public继承 private继承 protected继承}{34}{paragraph*.16}%
\contentsline {subsubsection}{\numberline {3.1.7}抽象基类}{35}{subsubsection.3.1.7}%
\contentsline {paragraph}{语法细节}{37}{paragraph*.17}%
\contentsline {subsubsection}{\numberline {3.1.8}继承和动态内存分配}{37}{subsubsection.3.1.8}%
\contentsline {paragraph}{析构顺序}{37}{paragraph*.18}%
\contentsline {paragraph}{派生类的析构}{38}{paragraph*.19}%
\contentsline {paragraph}{派生类的复制构造}{38}{paragraph*.20}%
\contentsline {paragraph}{派生类的赋值构造运算符}{38}{paragraph*.21}%
\contentsline {subsection}{\numberline {3.2}认识模板}{39}{subsection.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}什么是模板？}{39}{subsubsection.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}声明模板}{39}{subsubsection.3.2.2}%
\contentsline {subsection}{\numberline {3.3}模板的实例化}{41}{subsection.3.3}%
\contentsline {subsubsection}{\numberline {3.3.1}类模板的实例化}{41}{subsubsection.3.3.1}%
\contentsline {subsubsection}{\numberline {3.3.2}函数模板的实例化}{42}{subsubsection.3.3.2}%
\contentsline {subsubsection}{\numberline {3.3.3}非类型模板形参的限制}{43}{subsubsection.3.3.3}%
\contentsline {subsubsection}{\numberline {3.3.4}实例化的时机}{43}{subsubsection.3.3.4}%
\contentsline {subsubsection}{\numberline {3.3.5}实例化的一个常见错误}{46}{subsubsection.3.3.5}%
\contentsline {subsection}{\numberline {3.4}模板的特化（具体化）}{46}{subsection.3.4}%
\contentsline {subsubsection}{\numberline {3.4.1}小技巧}{51}{subsubsection.3.4.1}%
